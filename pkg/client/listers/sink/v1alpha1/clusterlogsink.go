/*
Copyright 2018 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/knative/observability/pkg/apis/sink/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterLogSinkLister helps list ClusterLogSinks.
type ClusterLogSinkLister interface {
	// List lists all ClusterLogSinks in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterLogSink, err error)
	// ClusterLogSinks returns an object that can list and get ClusterLogSinks.
	ClusterLogSinks(namespace string) ClusterLogSinkNamespaceLister
	ClusterLogSinkListerExpansion
}

// clusterLogSinkLister implements the ClusterLogSinkLister interface.
type clusterLogSinkLister struct {
	indexer cache.Indexer
}

// NewClusterLogSinkLister returns a new ClusterLogSinkLister.
func NewClusterLogSinkLister(indexer cache.Indexer) ClusterLogSinkLister {
	return &clusterLogSinkLister{indexer: indexer}
}

// List lists all ClusterLogSinks in the indexer.
func (s *clusterLogSinkLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterLogSink, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterLogSink))
	})
	return ret, err
}

// ClusterLogSinks returns an object that can list and get ClusterLogSinks.
func (s *clusterLogSinkLister) ClusterLogSinks(namespace string) ClusterLogSinkNamespaceLister {
	return clusterLogSinkNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClusterLogSinkNamespaceLister helps list and get ClusterLogSinks.
type ClusterLogSinkNamespaceLister interface {
	// List lists all ClusterLogSinks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterLogSink, err error)
	// Get retrieves the ClusterLogSink from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ClusterLogSink, error)
	ClusterLogSinkNamespaceListerExpansion
}

// clusterLogSinkNamespaceLister implements the ClusterLogSinkNamespaceLister
// interface.
type clusterLogSinkNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ClusterLogSinks in the indexer for a given namespace.
func (s clusterLogSinkNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterLogSink, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterLogSink))
	})
	return ret, err
}

// Get retrieves the ClusterLogSink from the indexer for a given namespace and name.
func (s clusterLogSinkNamespaceLister) Get(name string) (*v1alpha1.ClusterLogSink, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("clusterlogsink"), name)
	}
	return obj.(*v1alpha1.ClusterLogSink), nil
}
