/*
Copyright 2018 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/knative/observability/pkg/apis/sink/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterMetricSinkLister helps list ClusterMetricSinks.
type ClusterMetricSinkLister interface {
	// List lists all ClusterMetricSinks in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterMetricSink, err error)
	// ClusterMetricSinks returns an object that can list and get ClusterMetricSinks.
	ClusterMetricSinks(namespace string) ClusterMetricSinkNamespaceLister
	ClusterMetricSinkListerExpansion
}

// clusterMetricSinkLister implements the ClusterMetricSinkLister interface.
type clusterMetricSinkLister struct {
	indexer cache.Indexer
}

// NewClusterMetricSinkLister returns a new ClusterMetricSinkLister.
func NewClusterMetricSinkLister(indexer cache.Indexer) ClusterMetricSinkLister {
	return &clusterMetricSinkLister{indexer: indexer}
}

// List lists all ClusterMetricSinks in the indexer.
func (s *clusterMetricSinkLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterMetricSink, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterMetricSink))
	})
	return ret, err
}

// ClusterMetricSinks returns an object that can list and get ClusterMetricSinks.
func (s *clusterMetricSinkLister) ClusterMetricSinks(namespace string) ClusterMetricSinkNamespaceLister {
	return clusterMetricSinkNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClusterMetricSinkNamespaceLister helps list and get ClusterMetricSinks.
type ClusterMetricSinkNamespaceLister interface {
	// List lists all ClusterMetricSinks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterMetricSink, err error)
	// Get retrieves the ClusterMetricSink from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ClusterMetricSink, error)
	ClusterMetricSinkNamespaceListerExpansion
}

// clusterMetricSinkNamespaceLister implements the ClusterMetricSinkNamespaceLister
// interface.
type clusterMetricSinkNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ClusterMetricSinks in the indexer for a given namespace.
func (s clusterMetricSinkNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterMetricSink, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterMetricSink))
	})
	return ret, err
}

// Get retrieves the ClusterMetricSink from the indexer for a given namespace and name.
func (s clusterMetricSinkNamespaceLister) Get(name string) (*v1alpha1.ClusterMetricSink, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("clustermetricsink"), name)
	}
	return obj.(*v1alpha1.ClusterMetricSink), nil
}
